services:
  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: ${POSTGRES_IMAGE}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_HTTP_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${PWD}/postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 90s
      timeout: 30s
      retries: 5
      start_period: 30s

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: ${REDIS_IMAGE}
    ports:
      - "${REDIS_PORT}:${REDIS_HTTP_PORT}"
    volumes:
      - ${PWD}/redis_data/redis_data:/data
      - ${PWD}/redis_data/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USERNAME}
    restart: unless-stopped
    sysctls:
      net.core.somaxconn: "65536"
    command: 
      - /bin/sh
      - -c
      - |
        # Remove vm.overcommit_memory from redis.conf to prevent warnings
        sed -i '/vm.overcommit_memory/d' /usr/local/etc/redis/redis.conf
        exec redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "--user", "${REDIS_USER}", "--pass", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    ulimits:
      nofile:
        soft: 100032
        hard: 100032

  # frontend:
  #   container_name: ${FRONTEND_CONTAINER_NAME:-frontend}
  #   image: ${IMAGE}:latest
  #   environment:
  #     - DISPLAY=${DISPLAY:-host.docker.internal:0}
  #     - PYTHONPATH=/app
  #     - BACKEND_URL=${BACKEND_URL:-http://localhost:8000/}
  #     - API_BASE_URL=${API_BASE_URL:-http://localhost:8000/api/v1/}
  #     - POSTGRES_HOST=postgres
  #     - REDIS_HOST=redis
  #   volumes:
  #     - /tmp/.X11-unix:/tmp/.X11-unix  # For Linuxok 
  #   command: python app/entry_inventory.py 
  #   # Windows compatibility requires host.docker.internal
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   # Use network_mode: host for Linux, bridge for Windows
  #   network_mode: ${NETWORK_MODE:-bridge}
  #   stdin_open: true
  #   tty: true
  #   depends_on:
  #     - postgres
  #     - redis
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data: